plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.openapi.generator' version '7.7.0'
}

group = 'personalspring'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:[2.6.0,2.7.0)'
    implementation 'org.openapitools:jackson-databind-nullable:[0.2.0,0.3.0)'
    implementation 'jakarta.persistence:jakarta.persistence-api'
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0'
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api'
    implementation 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    inputSpec = "$projectDir/src/main/resources/api/openapi.yaml"
    outputDir.set("$buildDir/generated/openapi")
    generatorName = "spring"
    apiPackage = "personalspring.infrastructure.api"
    modelPackage = "personalspring.infrastructure.dto"
    // generateApis = true
    generateApiTests = true
    generateModelTests = true
    configOptions = [
        useJakartaEe     : 'true',
        delegatePattern  : 'true',
        serializableModel: 'true'
    ]
}

tasks.compileJava {
    dependsOn tasks.openApiGenerate
}

springBoot {
    mainClass = 'personalspring.PersonalSpringApplication'
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/openapi/src/main/java"
        }
    }
}

bootRun {
    environment 'spring.output.ansi.console-available', true
}
